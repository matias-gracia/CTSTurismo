{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from '../api/axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      // Lista de usuarios\n      winnerMessage: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      try {\n        const response = await axios.get('/user-list/', {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n        this.users = response.data;\n      } catch (error) {\n        console.error('Error al obtener la lista de usuarios:', error);\n        this.$router.push('/login');\n      }\n    },\n    async generateWinner() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.errorMessage = 'No estás autenticado.';\n        return;\n      }\n      try {\n        const response = await axios.post('/generate-winner/', {}, {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        });\n\n        // Obtén el correo del ganador\n        const winnerEmail = response.data.winner_email;\n\n        // Actualiza los datos de los usuarios para reflejar al ganador\n        this.users = this.users.map(user => ({\n          ...user,\n          is_winner: user.email === winnerEmail,\n          is_active: user.email === winnerEmail ? false : user.is_active\n        }));\n        this.winnerMessage = `¡Ganador seleccionado! Felicidades a ${response.data.winner}`;\n        this.errorMessage = '';\n      } catch (error) {\n        this.errorMessage = error.response?.data?.error || 'Error al generar el ganador.';\n        this.winnerMessage = '';\n      }\n    }\n  },\n  created() {\n    this.fetchUsers(); // Cargar usuarios al iniciar\n  }\n};","map":{"version":3,"names":["axios","data","users","winnerMessage","errorMessage","methods","fetchUsers","token","localStorage","getItem","$router","push","response","get","headers","Authorization","error","console","generateWinner","post","winnerEmail","winner_email","map","user","is_winner","email","is_active","winner","created"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\GenerateWinner.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-container\">\r\n    <div class=\"form-container\">\r\n      <h2>Lista de Usuarios Registrados</h2>\r\n      <table class=\"user-table\" v-if=\"users.length\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo</th>\r\n            <th>Estado</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"user in users\"\r\n            :key=\"user.email\"\r\n            :class=\"{ winner: user.is_winner }\"\r\n          >\r\n            <td>{{ user.username }}</td>\r\n            <td>{{ user.email }}</td>\r\n            <td>{{ user.is_winner ? 'Ganador' : user.is_active ? 'Activo' : 'Inactivo' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-if=\"!users.length\">No hay usuarios registrados.</p>\r\n    </div>\r\n    <div class=\"form-container\">\r\n      <h2>Generar Ganador</h2>\r\n      <form @submit.prevent=\"generateWinner\">\r\n        <button type=\"submit\" class=\"generate-button\">Seleccionar Ganador</button>\r\n        <p v-if=\"winnerMessage\" class=\"winner-message\">{{ winnerMessage }}</p>\r\n        <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from '../api/axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [], // Lista de usuarios\r\n      winnerMessage: '',\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get('/user-list/', {\r\n          headers: { Authorization: `Token ${token}` },\r\n        });\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error('Error al obtener la lista de usuarios:', error);\r\n        this.$router.push('/login');\r\n      }\r\n    },\r\n    async generateWinner() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'No estás autenticado.';\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.post('/generate-winner/', {}, {\r\n          headers: { Authorization: `Token ${token}` },\r\n        });\r\n\r\n        // Obtén el correo del ganador\r\n        const winnerEmail = response.data.winner_email;\r\n\r\n        // Actualiza los datos de los usuarios para reflejar al ganador\r\n        this.users = this.users.map((user) => ({\r\n          ...user,\r\n          is_winner: user.email === winnerEmail,\r\n          is_active: user.email === winnerEmail ? false : user.is_active,\r\n        }));\r\n\r\n        this.winnerMessage = `¡Ganador seleccionado! Felicidades a ${response.data.winner}`;\r\n        this.errorMessage = '';\r\n      } catch (error) {\r\n        this.errorMessage = error.response?.data?.error || 'Error al generar el ganador.';\r\n        this.winnerMessage = '';\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUsers(); // Cargar usuarios al iniciar\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.admin-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: url('../assets/pareja.jpg') no-repeat center center fixed;\r\n  background-size: cover;\r\n  min-height: 100vh;\r\n}\r\n\r\n.form-container {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 90%;\r\n  max-width: 800px;\r\n  text-align: center;\r\n}\r\n\r\n.user-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-table th, .user-table td {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.user-table th {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.user-table tr.winner {\r\n  background-color: yellow; /* Resalta al ganador */\r\n}\r\n\r\n.generate-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.generate-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.winner-message {\r\n  color: green;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;AAuCA,OAAOA,KAAI,MAAO,cAAc;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAE;MACXC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF;MACA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,aAAa,EAAE;UAC9CC,OAAO,EAAE;YAAEC,aAAa,EAAE,SAASR,KAAK;UAAG;QAC7C,CAAC,CAAC;QACF,IAAI,CAACL,KAAI,GAAIU,QAAQ,CAACX,IAAI;MAC5B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B;IACF,CAAC;IACD,MAAMO,cAAcA,CAAA,EAAG;MACrB,MAAMX,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,IAAI,CAACH,YAAW,GAAI,uBAAuB;QAC3C;MACF;MACA,IAAI;QACF,MAAMQ,QAAO,GAAI,MAAMZ,KAAK,CAACmB,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE;UACzDL,OAAO,EAAE;YAAEC,aAAa,EAAE,SAASR,KAAK;UAAG;QAC7C,CAAC,CAAC;;QAEF;QACA,MAAMa,WAAU,GAAIR,QAAQ,CAACX,IAAI,CAACoB,YAAY;;QAE9C;QACA,IAAI,CAACnB,KAAI,GAAI,IAAI,CAACA,KAAK,CAACoB,GAAG,CAAEC,IAAI,KAAM;UACrC,GAAGA,IAAI;UACPC,SAAS,EAAED,IAAI,CAACE,KAAI,KAAML,WAAW;UACrCM,SAAS,EAAEH,IAAI,CAACE,KAAI,KAAML,WAAU,GAAI,KAAI,GAAIG,IAAI,CAACG;QACvD,CAAC,CAAC,CAAC;QAEH,IAAI,CAACvB,aAAY,GAAI,wCAAwCS,QAAQ,CAACX,IAAI,CAAC0B,MAAM,EAAE;QACnF,IAAI,CAACvB,YAAW,GAAI,EAAE;MACxB,EAAE,OAAOY,KAAK,EAAE;QACd,IAAI,CAACZ,YAAW,GAAIY,KAAK,CAACJ,QAAQ,EAAEX,IAAI,EAAEe,KAAI,IAAK,8BAA8B;QACjF,IAAI,CAACb,aAAY,GAAI,EAAE;MACzB;IACF;EACF,CAAC;EACDyB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,UAAU,CAAC,CAAC,EAAE;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}