{"ast":null,"code":"import { registerUser } from '../api/auth';\nexport default {\n  data() {\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = \"Las contraseñas no coinciden.\";\n        return;\n      }\n      try {\n        const response = await fetch(\"/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.username,\n            email: this.email,\n            password: this.password\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Error en el registro. Por favor, intenta nuevamente.\");\n        }\n        const result = await response.json();\n        alert(\"¡Registro exitoso!\");\n        this.$emit(\"registerSuccess\", result);\n        this.resetForm();\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n    resetForm() {\n      this.username = \"\";\n      this.email = \"\";\n      this.password = \"\";\n      this.confirmPassword = \"\";\n      this.errorMessage = \"\";\n    }\n  }\n};","map":{"version":3,"names":["registerUser","data","username","email","password","confirmPassword","errorMessage","methods","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","alert","$emit","resetForm","error","message"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n      <h2>Registro</h2>\r\n      <div id=\"error-message\" class=\"error\">{{ errorMessage }}</div>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <input type=\"text\" v-model=\"username\" placeholder=\"Nombre de usuario\" required />\r\n        <input type=\"email\" v-model=\"email\" placeholder=\"Correo electrónico\" required />\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"Contraseña\" required />\r\n        <input type=\"password\" v-model=\"confirmPassword\" placeholder=\"Confirmar contraseña\" required />\r\n        <button type=\"submit\">Registrarse</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { registerUser } from '../api/auth';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        errorMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async handleSubmit() {\r\n        if (this.password !== this.confirmPassword) {\r\n          this.errorMessage = \"Las contraseñas no coinciden.\";\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await fetch(\"/register\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              username: this.username,\r\n              email: this.email,\r\n              password: this.password,\r\n            }),\r\n          });\r\n  \r\n          if (!response.ok) {\r\n            throw new Error(\"Error en el registro. Por favor, intenta nuevamente.\");\r\n          }\r\n  \r\n          const result = await response.json();\r\n          alert(\"¡Registro exitoso!\");\r\n          this.$emit(\"registerSuccess\", result);\r\n          this.resetForm();\r\n        } catch (error) {\r\n          this.errorMessage = error.message;\r\n        }\r\n      },\r\n      resetForm() {\r\n        this.username = \"\";\r\n        this.email = \"\";\r\n        this.password = \"\";\r\n        this.confirmPassword = \"\";\r\n        this.errorMessage = \"\";\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n<style scoped>\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f4f4f9;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.form-container {\r\n  background: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n}\r\n\r\n.form-container h2 {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.form-container input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-container button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.form-container button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n</style>\r\n\r\n  "],"mappings":"AAeE,SAASA,YAAW,QAAS,aAAa;AAE1C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,YAAW,GAAI,+BAA+B;QACnD;MACF;MAEA,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAAC,WAAW,EAAE;UACxCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBb,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;QACzE;QAEA,MAAMC,MAAK,GAAI,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACpCC,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACC,KAAK,CAAC,iBAAiB,EAAEH,MAAM,CAAC;QACrC,IAAI,CAACI,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACjB,YAAW,GAAIiB,KAAK,CAACC,OAAO;MACnC;IACF,CAAC;IACDF,SAASA,CAAA,EAAG;MACV,IAAI,CAACpB,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,YAAW,GAAI,EAAE;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}