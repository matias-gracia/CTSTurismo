{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../api/axios'; // Asegúrate de importar tu configuración de Axios\n\nexport default {\n  data() {\n    return {\n      winnerMessage: '',\n      // Mensaje del ganador\n      errorMessage: '' // Mensaje de error\n    };\n  },\n  methods: {\n    async generateWinner() {\n      const token = localStorage.getItem('token'); // Obtén el token almacenado\n      if (!token) {\n        this.errorMessage = 'No estás autenticado.';\n        return;\n      }\n      try {\n        const response = await axios.post('/generate-winner/', {}, {\n          headers: {\n            Authorization: `Token ${token}`\n          } // Agrega el token en el encabezado\n        });\n        this.winnerMessage = `¡Ganador seleccionado! Felicidades a ${response.data.winner}`;\n        this.errorMessage = '';\n      } catch (error) {\n        this.errorMessage = error.response?.data?.error || 'Error al generar el ganador.';\n        this.winnerMessage = '';\n      }\n    }\n  },\n  created() {\n    const userToken = localStorage.getItem('token'); // Recupera el token\n    if (!userToken) {\n      this.$router.push('/login'); // Redirige si no está autenticado\n      return;\n    }\n\n    // Valida si el usuario es administrador\n    axios.get('/user-profile/', {\n      headers: {\n        Authorization: `Token ${userToken}`\n      }\n    }).then(response => {\n      if (!response.data.is_staff) {\n        this.$router.push('/'); // Redirige si no es administrador\n      }\n    }).catch(() => {\n      this.$router.push('/login'); // Redirige si hay error en la verificación\n    });\n  }\n};","map":{"version":3,"names":["axios","data","winnerMessage","errorMessage","methods","generateWinner","token","localStorage","getItem","response","post","headers","Authorization","winner","error","created","userToken","$router","push","get","then","is_staff","catch"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\GenerateWinner.vue"],"sourcesContent":["<template>\r\n    <div class=\"winner-container\">\r\n      <h2>Generar Ganador</h2>\r\n      <button @click=\"generateWinner\" class=\"generate-button\">Seleccionar Ganador</button>\r\n      <p v-if=\"winnerMessage\" class=\"winner-message\">{{ winnerMessage }}</p>\r\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from '../api/axios'; // Asegúrate de importar tu configuración de Axios\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        winnerMessage: '', // Mensaje del ganador\r\n        errorMessage: '', // Mensaje de error\r\n      };\r\n    },\r\n    methods: {\r\n      async generateWinner() {\r\n        const token = localStorage.getItem('token'); // Obtén el token almacenado\r\n        if (!token) {\r\n          this.errorMessage = 'No estás autenticado.';\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const response = await axios.post('/generate-winner/', {}, {\r\n            headers: { Authorization: `Token ${token}` }, // Agrega el token en el encabezado\r\n          });\r\n          this.winnerMessage = `¡Ganador seleccionado! Felicidades a ${response.data.winner}`;\r\n          this.errorMessage = '';\r\n        } catch (error) {\r\n          this.errorMessage =\r\n            error.response?.data?.error || 'Error al generar el ganador.';\r\n          this.winnerMessage = '';\r\n        }\r\n    },\r\n    },\r\n    created() {\r\n      const userToken = localStorage.getItem('token'); // Recupera el token\r\n      if (!userToken) {\r\n        this.$router.push('/login'); // Redirige si no está autenticado\r\n        return;\r\n      }\r\n  \r\n      // Valida si el usuario es administrador\r\n      axios\r\n        .get('/user-profile/', { headers: { Authorization: `Token ${userToken}` } })\r\n        .then((response) => {\r\n          if (!response.data.is_staff) {\r\n            this.$router.push('/'); // Redirige si no es administrador\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$router.push('/login'); // Redirige si hay error en la verificación\r\n        });\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .winner-container {\r\n    text-align: center;\r\n    margin: 50px auto;\r\n    max-width: 400px;\r\n  }\r\n  .generate-button {\r\n    background-color: #4caf50;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n  }\r\n  .generate-button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  .winner-message {\r\n    color: green;\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n  }\r\n  .error {\r\n    color: red;\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAUE,OAAOA,KAAI,MAAO,cAAc,EAAE;;AAElC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MAAE;MACnBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAC7C,IAAI,CAACF,KAAK,EAAE;QACV,IAAI,CAACH,YAAW,GAAI,uBAAuB;QAC3C;MACF;MAEA,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE;UACzDC,OAAO,EAAE;YAAEC,aAAa,EAAE,SAASN,KAAK;UAAG,CAAC,CAAE;QAChD,CAAC,CAAC;QACF,IAAI,CAACJ,aAAY,GAAI,wCAAwCO,QAAQ,CAACR,IAAI,CAACY,MAAM,EAAE;QACnF,IAAI,CAACV,YAAW,GAAI,EAAE;MACxB,EAAE,OAAOW,KAAK,EAAE;QACd,IAAI,CAACX,YAAW,GACdW,KAAK,CAACL,QAAQ,EAAER,IAAI,EAAEa,KAAI,IAAK,8BAA8B;QAC/D,IAAI,CAACZ,aAAY,GAAI,EAAE;MACzB;IACJ;EACA,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,MAAMC,SAAQ,GAAIT,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;IACjD,IAAI,CAACQ,SAAS,EAAE;MACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC7B;IACF;;IAEA;IACAlB,KAAI,CACDmB,GAAG,CAAC,gBAAgB,EAAE;MAAER,OAAO,EAAE;QAAEC,aAAa,EAAE,SAASI,SAAS;MAAG;IAAE,CAAC,EAC1EI,IAAI,CAAEX,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACR,IAAI,CAACoB,QAAQ,EAAE;QAC3B,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B;IACF,CAAC,EACAI,KAAK,CAAC,MAAM;MACX,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC/B,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}