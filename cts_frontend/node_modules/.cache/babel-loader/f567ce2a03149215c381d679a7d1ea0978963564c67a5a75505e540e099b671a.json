{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  id: \"error-message\",\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Registro\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.registerUserHandler && $options.registerUserHandler(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"Nombre de usuario\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"Correo electrónico\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    placeholder: \"Contraseña\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.confirmPassword = $event),\n    placeholder: \"Confirmar contraseña\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Registrarse\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","id","_createElementBlock","_hoisted_1","_createElementVNode","$data","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","registerUserHandler","type","$event","username","placeholder","required","email","password","confirmPassword"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h2>Registro</h2>\r\n    <div id=\"error-message\" class=\"error\" v-if=\"errorMessage\">{{ errorMessage }}</div>\r\n    <form @submit.prevent=\"registerUserHandler\">\r\n      <input type=\"text\" v-model=\"username\" placeholder=\"Nombre de usuario\" required />\r\n      <input type=\"email\" v-model=\"email\" placeholder=\"Correo electrónico\" required />\r\n      <input type=\"password\" v-model=\"password\" placeholder=\"Contraseña\" required />\r\n      <input type=\"password\" v-model=\"confirmPassword\" placeholder=\"Confirmar contraseña\" required />\r\n      <button type=\"submit\">Registrarse</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { registerUser } from '../api/auth'; // Importa la función de registro\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async registerUserHandler() {\r\n      // Validar que las contraseñas coincidan\r\n      if (this.password !== this.confirmPassword) {\r\n        this.errorMessage = \"Las contraseñas no coinciden.\";\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Llamar a la función de registro\r\n        const result = await registerUser({\r\n          username: this.username,\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n\r\n        // Registro exitoso\r\n        alert(\"¡Registro exitoso! Revisa tu correo para confirmar tu cuenta.\");\r\n        this.resetForm();\r\n        this.$emit(\"registerSuccess\", result);\r\n      } catch (error) {\r\n        // Manejo de errores\r\n        this.errorMessage = error.response?.data?.error || \"Error en el registro. Por favor, intenta nuevamente.\";\r\n      }\r\n    },\r\n    resetForm() {\r\n      // Reiniciar los campos del formulario\r\n      this.username = \"\";\r\n      this.email = \"\";\r\n      this.password = \"\";\r\n      this.confirmPassword = \"\";\r\n      this.errorMessage = \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n  \r\n<style scoped>\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f4f4f9;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.form-container {\r\n  background: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n}\r\n\r\n.form-container h2 {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.form-container input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-container button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.form-container button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n</style>\r\n\r\n  "],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAGSC,EAAE,EAAC,eAAe;EAACF,KAAK,EAAC;;;uBAFhCG,mBAAA,CAUM,OAVNC,UAUM,G,0BATJC,mBAAA,CAAiB,YAAb,UAAQ,sBACgCC,KAAA,CAAAC,YAAY,I,cAAxDJ,mBAAA,CAAkF,OAAlFK,UAAkF,EAAAC,gBAAA,CAArBH,KAAA,CAAAC,YAAY,oBAH7EG,mBAAA,gBAIIL,mBAAA,CAMO;IANAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJjBC,cAAA,KAAAC,IAAA,KAI2BC,QAAA,CAAAC,mBAAA,IAAAD,QAAA,CAAAC,mBAAA,IAAAF,IAAA,CAAmB;sBACxCT,mBAAA,CAAiF;IAA1EY,IAAI,EAAC,MAAM;IALxB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAKkCZ,KAAA,CAAAa,QAAQ,GAAAD,MAAA;IAAEE,WAAW,EAAC,mBAAmB;IAACC,QAAQ,EAAR;iDAA1Cf,KAAA,CAAAa,QAAQ,E,mBACpCd,mBAAA,CAAgF;IAAzEY,IAAI,EAAC,OAAO;IANzB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMmCZ,KAAA,CAAAgB,KAAK,GAAAJ,MAAA;IAAEE,WAAW,EAAC,oBAAoB;IAACC,QAAQ,EAAR;iDAAxCf,KAAA,CAAAgB,KAAK,E,mBAClCjB,mBAAA,CAA8E;IAAvEY,IAAI,EAAC,UAAU;IAP5B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAOsCZ,KAAA,CAAAiB,QAAQ,GAAAL,MAAA;IAAEE,WAAW,EAAC,YAAY;IAACC,QAAQ,EAAR;iDAAnCf,KAAA,CAAAiB,QAAQ,E,mBACxClB,mBAAA,CAA+F;IAAxFY,IAAI,EAAC,UAAU;IAR5B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAQsCZ,KAAA,CAAAkB,eAAe,GAAAN,MAAA;IAAEE,WAAW,EAAC,sBAAsB;IAACC,QAAQ,EAAR;iDAApDf,KAAA,CAAAkB,eAAe,E,6BAC/CnB,mBAAA,CAA0C;IAAlCY,IAAI,EAAC;EAAQ,GAAC,aAAW,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}