{"ast":null,"code":"import { setPassword } from '../api/auth'; // Importa la función del archivo auth.js\n\nexport default {\n  data() {\n    return {\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  async created() {\n    // Verifica que los parámetros están en la URL\n    if (!this.$route.query.uidb64 || !this.$route.query.token) {\n      this.errorMessage = 'No se pudieron obtener los parámetros de la URL.';\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Las contraseñas no coinciden.';\n        return;\n      }\n      try {\n        const response = await setPassword({\n          uidb64: this.$route.query.uidb64,\n          token: this.$route.query.token,\n          password: this.password\n        });\n        this.successMessage = response.message;\n        this.errorMessage = '';\n      } catch (error) {\n        this.successMessage = '';\n        this.errorMessage = error.response?.data?.error || 'Error al establecer la contraseña.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["setPassword","data","password","confirmPassword","errorMessage","successMessage","created","$route","query","uidb64","token","methods","handleSubmit","response","message","error"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\CreatePasswordForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n      <h2>Crear Nueva Contraseña</h2>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <input\r\n          type=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          v-model=\"confirmPassword\"\r\n          placeholder=\"Confirmar contraseña\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Guardar Contraseña</button>\r\n      </form>\r\n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n      <div v-if=\"successMessage\" class=\"success\">{{ successMessage }}</div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { setPassword } from '../api/auth'; // Importa la función del archivo auth.js\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        password: '',\r\n        confirmPassword: '',\r\n        errorMessage: '',\r\n        successMessage: '',\r\n      };\r\n    },\r\n    async created() {\r\n      // Verifica que los parámetros están en la URL\r\n      if (!this.$route.query.uidb64 || !this.$route.query.token) {\r\n        this.errorMessage = 'No se pudieron obtener los parámetros de la URL.';\r\n      }\r\n    },\r\n    methods: {\r\n      async handleSubmit() {\r\n        if (this.password !== this.confirmPassword) {\r\n          this.errorMessage = 'Las contraseñas no coinciden.';\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await setPassword({\r\n            uidb64: this.$route.query.uidb64,\r\n            token: this.$route.query.token,\r\n            password: this.password,\r\n          });\r\n  \r\n          this.successMessage = response.message;\r\n          this.errorMessage = '';\r\n        } catch (error) {\r\n          this.successMessage = '';\r\n          this.errorMessage =\r\n            error.response?.data?.error || 'Error al establecer la contraseña.';\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>  \r\n  \r\n  <style scoped>\r\n  .form-container {\r\n    max-width: 400px;\r\n    margin: 50px auto;\r\n    text-align: center;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n  .error {\r\n    color: red;\r\n    font-weight: bold;\r\n  }\r\n  .success {\r\n    color: green;\r\n    font-weight: bold;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAwBE,SAASA,WAAU,QAAS,aAAa,EAAE;;AAE3C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,MAAK,IAAK,CAAC,IAAI,CAACF,MAAM,CAACC,KAAK,CAACE,KAAK,EAAE;MACzD,IAAI,CAACN,YAAW,GAAI,kDAAkD;IACxE;EACF,CAAC;EACDO,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACV,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,YAAW,GAAI,+BAA+B;QACnD;MACF;MAEA,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMb,WAAW,CAAC;UACjCS,MAAM,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,MAAM;UAChCC,KAAK,EAAE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACE,KAAK;UAC9BR,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAI,CAACG,cAAa,GAAIQ,QAAQ,CAACC,OAAO;QACtC,IAAI,CAACV,YAAW,GAAI,EAAE;MACxB,EAAE,OAAOW,KAAK,EAAE;QACd,IAAI,CAACV,cAAa,GAAI,EAAE;QACxB,IAAI,CAACD,YAAW,GACdW,KAAK,CAACF,QAAQ,EAAEZ,IAAI,EAAEc,KAAI,IAAK,oCAAoC;MACvE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}