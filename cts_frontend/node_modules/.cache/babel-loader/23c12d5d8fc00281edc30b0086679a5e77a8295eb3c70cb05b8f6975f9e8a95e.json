{"ast":null,"code":"import axiosInstance from \"../api/axios\"; // Usa tu configuración de Axios\n\nexport default {\n  data() {\n    return {\n      loading: true,\n      success: false\n    };\n  },\n  async created() {\n    const uidb64 = this.$route.query.uidb64; // Captura uidb64 desde la URL\n    const token = this.$route.query.token; // Captura token desde la URL\n\n    if (!uidb64 || !token) {\n      this.loading = false;\n      this.success = false;\n      return;\n    }\n    try {\n      const response = await axiosInstance.get(`/verify-email/?uidb64=${uidb64}&token=${token}`);\n      if (response.status === 200) {\n        this.success = true;\n      } else {\n        throw new Error(\"Error en la validación.\");\n      }\n    } catch (error) {\n      console.error(error.message);\n      this.success = false;\n    } finally {\n      this.loading = false;\n    }\n  }\n};","map":{"version":3,"names":["axiosInstance","data","loading","success","created","uidb64","$route","query","token","response","get","status","Error","error","console","message"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\EmailConfirmation.vue"],"sourcesContent":["<template>\r\n  <div class=\"confirmation-container\">\r\n    <h2>Confirmación de Correo Electrónico</h2>\r\n    <p v-if=\"loading\">Validando tu correo, por favor espera...</p>\r\n    <p v-else-if=\"success\" class=\"success\">¡Tu correo ha sido validado exitosamente! Ahora puedes iniciar sesión.</p>\r\n    <p v-else class=\"error\">Lo sentimos, la validación de tu correo ha fallado. Intenta nuevamente.</p>\r\n    <router-link v-if=\"success\" to=\"/\">Ir al inicio</router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axiosInstance from \"../api/axios\"; // Usa tu configuración de Axios\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      success: false,\r\n    };\r\n  },\r\n  async created() {\r\n    const uidb64 = this.$route.query.uidb64; // Captura uidb64 desde la URL\r\n    const token = this.$route.query.token; // Captura token desde la URL\r\n\r\n    if (!uidb64 || !token) {\r\n      this.loading = false;\r\n      this.success = false;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axiosInstance.get(`/verify-email/?uidb64=${uidb64}&token=${token}`);\r\n      if (response.status === 200) {\r\n        this.success = true;\r\n      } else {\r\n        throw new Error(\"Error en la validación.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      this.success = false;\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.confirmation-container {\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n  text-align: center;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\nh2 {\r\n  color: #333;\r\n}\r\n.success {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n.error {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"AAWA,OAAOA,aAAY,MAAO,cAAc,EAAE;;AAE1C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,MAAM,EAAE;IACzC,MAAMG,KAAI,GAAI,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,KAAK,EAAE;;IAEvC,IAAI,CAACH,MAAK,IAAK,CAACG,KAAK,EAAE;MACrB,IAAI,CAACN,OAAM,GAAI,KAAK;MACpB,IAAI,CAACC,OAAM,GAAI,KAAK;MACpB;IACF;IAEA,IAAI;MACF,MAAMM,QAAO,GAAI,MAAMT,aAAa,CAACU,GAAG,CAAC,yBAAyBL,MAAM,UAAUG,KAAK,EAAE,CAAC;MAC1F,IAAIC,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;QAC3B,IAAI,CAACR,OAAM,GAAI,IAAI;MACrB,OAAO;QACL,MAAM,IAAIS,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,EAAE,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;MAC5B,IAAI,CAACZ,OAAM,GAAI,KAAK;IACtB,UAAU;MACR,IAAI,CAACD,OAAM,GAAI,KAAK;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}