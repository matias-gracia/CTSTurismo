{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"admin-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"user-table\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"form-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"winner-message\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Lista de Usuarios Registrados\", -1 /* HOISTED */)), $data.users.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Nombre\"), _createElementVNode(\"th\", null, \"Correo\"), _createElementVNode(\"th\", null, \"Estado\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.email,\n      class: _normalizeClass({\n        winner: user.is_winner\n      })\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.is_winner ? 'Ganador' : user.is_active ? 'Activo' : 'Inactivo'), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), !$data.users.length ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"No hay usuarios registrados.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Generar Ganador\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.generateWinner && $options.generateWinner(...args), [\"prevent\"]))\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"generate-button\"\n  }, \"Seleccionar Ganador\", -1 /* HOISTED */)), $data.winnerMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.winnerMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","users","length","_hoisted_3","_Fragment","_renderList","user","email","_normalizeClass","winner","is_winner","_toDisplayString","username","is_active","_createCommentVNode","_hoisted_4","_hoisted_5","onSubmit","_cache","_withModifiers","args","$options","generateWinner","type","winnerMessage","_hoisted_6","errorMessage","_hoisted_7"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\GenerateWinner.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-container\">\r\n    <div class=\"form-container\">\r\n      <h2>Lista de Usuarios Registrados</h2>\r\n      <table class=\"user-table\" v-if=\"users.length\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Correo</th>\r\n            <th>Estado</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"user in users\"\r\n            :key=\"user.email\"\r\n            :class=\"{ winner: user.is_winner }\"\r\n          >\r\n            <td>{{ user.username }}</td>\r\n            <td>{{ user.email }}</td>\r\n            <td>{{ user.is_winner ? 'Ganador' : user.is_active ? 'Activo' : 'Inactivo' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <p v-if=\"!users.length\">No hay usuarios registrados.</p>\r\n    </div>\r\n    <div class=\"form-container\">\r\n      <h2>Generar Ganador</h2>\r\n      <form @submit.prevent=\"generateWinner\">\r\n        <button type=\"submit\" class=\"generate-button\">Seleccionar Ganador</button>\r\n        <p v-if=\"winnerMessage\" class=\"winner-message\">{{ winnerMessage }}</p>\r\n        <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from '../api/axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [], // Lista de usuarios\r\n      winnerMessage: '',\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get('/user-list/', {\r\n          headers: { Authorization: `Token ${token}` },\r\n        });\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error('Error al obtener la lista de usuarios:', error);\r\n        this.$router.push('/login');\r\n      }\r\n    },\r\n    async generateWinner() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'No estás autenticado.';\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.post('/generate-winner/', {}, {\r\n          headers: { Authorization: `Token ${token}` },\r\n        });\r\n\r\n        // Actualiza el estado del ganador\r\n        const winnerEmail = response.data.winner_email;\r\n        this.users = this.users.map((user) =>\r\n          user.email === winnerEmail\r\n            ? { ...user, is_winner: true, is_active: false }\r\n            : user\r\n        );\r\n\r\n        this.winnerMessage = `¡Ganador seleccionado! Felicidades a ${response.data.winner}`;\r\n        this.errorMessage = '';\r\n      } catch (error) {\r\n        this.errorMessage =\r\n          error.response?.data?.error || 'Error al generar el ganador.';\r\n        this.winnerMessage = '';\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUsers(); // Cargar usuarios al iniciar\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.admin-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: url('../assets/pareja.jpg') no-repeat center center fixed;\r\n  background-size: cover;\r\n  min-height: 100vh;\r\n}\r\n\r\n.form-container {\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 90%;\r\n  max-width: 800px;\r\n  text-align: center;\r\n}\r\n\r\n.user-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-table th, .user-table td {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.user-table th {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.user-table tr.winner {\r\n  background-color: yellow; /* Resalta al ganador */\r\n}\r\n\r\n.generate-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.generate-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.winner-message {\r\n  color: green;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAgB;;EAF/BC,GAAA;EAIaD,KAAK,EAAC;;;EAJnBC,GAAA;AAAA;;EA0BSD,KAAK,EAAC;AAAgB;;EA1B/BC,GAAA;EA8BgCD,KAAK,EAAC;;;EA9BtCC,GAAA;EA+B+BD,KAAK,EAAC;;;uBA9BnCE,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJD,mBAAA,CAAsC,YAAlC,+BAA6B,sBACDE,KAAA,CAAAC,KAAK,CAACC,MAAM,I,cAA5CN,mBAAA,CAmBQ,SAnBRO,UAmBQ,G,0BAlBNL,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAe,YAAX,QAAM,E,wBAGdA,mBAAA,CAUQ,iB,kBATNF,mBAAA,CAQKQ,SAAA,QArBfC,WAAA,CAc2BL,KAAA,CAAAC,KAAK,EAAbK,IAAI;yBADbV,mBAAA,CAQK;MANFD,GAAG,EAAEW,IAAI,CAACC,KAAK;MACfb,KAAK,EAhBlBc,eAAA;QAAAC,MAAA,EAgB8BH,IAAI,CAACI;MAAS;QAEhCZ,mBAAA,CAA4B,YAAAa,gBAAA,CAArBL,IAAI,CAACM,QAAQ,kBACpBd,mBAAA,CAAyB,YAAAa,gBAAA,CAAlBL,IAAI,CAACC,KAAK,kBACjBT,mBAAA,CAAkF,YAAAa,gBAAA,CAA3EL,IAAI,CAACI,SAAS,eAAeJ,IAAI,CAACO,SAAS,yC;wCApB9DC,mBAAA,gB,CAwBgBd,KAAA,CAAAC,KAAK,CAACC,MAAM,I,cAAtBN,mBAAA,CAAwD,KAxB9DmB,UAAA,EAwB8B,8BAA4B,KAxB1DD,mBAAA,e,GA0BIhB,mBAAA,CAOM,OAPNkB,UAOM,G,0BANJlB,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAIO;IAJAmB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MA5BnBC,cAAA,KAAAC,IAAA,KA4B6BC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;gCACnCtB,mBAAA,CAA0E;IAAlEyB,IAAI,EAAC,QAAQ;IAAC7B,KAAK,EAAC;KAAkB,qBAAmB,sBACxDM,KAAA,CAAAwB,aAAa,I,cAAtB5B,mBAAA,CAAsE,KAAtE6B,UAAsE,EAAAd,gBAAA,CAApBX,KAAA,CAAAwB,aAAa,oBA9BvEV,mBAAA,gBA+BiBd,KAAA,CAAA0B,YAAY,I,cAArB9B,mBAAA,CAA2D,KAA3D+B,UAA2D,EAAAhB,gBAAA,CAAnBX,KAAA,CAAA0B,YAAY,oBA/B5DZ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}