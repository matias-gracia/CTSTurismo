{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { registerUser } from \"../api/auth\"; // Tu lógica para el registro\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      email: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      try {\n        // Llama a la API para registrar al usuario\n        const response = await registerUser({\n          username: this.username,\n          email: this.email\n        });\n\n        // Verifica que la respuesta tenga un mensaje\n        if (response && response.data && response.data.message) {\n          alert(response.data.message); // Muestra el mensaje de éxito\n          this.$router.push(\"/login\"); // Redirige al login o donde prefieras\n        } else {\n          throw new Error(\"Respuesta inesperada de la API\");\n        }\n      } catch (error) {\n        // Manejo de errores\n        console.error(\"Error al consumir la API:\", error);\n        this.errorMessage = error.response?.data?.error || \"Error en el registro. Intenta nuevamente.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["registerUser","data","username","email","errorMessage","methods","handleSubmit","response","message","alert","$router","push","Error","error","console"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <h2>Registro inicial</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <input type=\"text\" v-model=\"username\" placeholder=\"Nombre completo\" required />\r\n      <input type=\"email\" v-model=\"email\" placeholder=\"Correo electrónico\" required />\r\n      <button type=\"submit\">Registrar</button>\r\n    </form>\r\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { registerUser } from \"../api/auth\"; // Tu lógica para el registro\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      email: \"\",\r\n      errorMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n  async handleSubmit() {\r\n    try {\r\n        // Llama a la API para registrar al usuario\r\n        const response = await registerUser({\r\n            username: this.username,\r\n            email: this.email,\r\n        });\r\n\r\n        // Verifica que la respuesta tenga un mensaje\r\n        if (response && response.data && response.data.message) {\r\n            alert(response.data.message); // Muestra el mensaje de éxito\r\n            this.$router.push(\"/login\"); // Redirige al login o donde prefieras\r\n        } else {\r\n            throw new Error(\"Respuesta inesperada de la API\");\r\n        }\r\n    } catch (error) {\r\n        // Manejo de errores\r\n        console.error(\"Error al consumir la API:\", error);\r\n        this.errorMessage =\r\n            error.response?.data?.error || \"Error en el registro. Intenta nuevamente.\";\r\n    }\r\n}\r\n,\r\n  },\r\n};\r\n</script>\r\n\r\n  \r\n<style scoped>\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f4f4f9;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.form-container {\r\n  background: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 50px auto;\r\n}\r\n\r\n.form-container h2 {\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.form-container input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-container button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.form-container button:hover {\r\n  background-color: #4cae4c;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n</style>\r\n\r\n  "],"mappings":";AAaA,SAASA,YAAW,QAAS,aAAa,EAAE;;AAE5C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACA;QACA,MAAMC,QAAO,GAAI,MAAMP,YAAY,CAAC;UAChCE,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;;QAEF;QACA,IAAII,QAAO,IAAKA,QAAQ,CAACN,IAAG,IAAKM,QAAQ,CAACN,IAAI,CAACO,OAAO,EAAE;UACpDC,KAAK,CAACF,QAAQ,CAACN,IAAI,CAACO,OAAO,CAAC,EAAE;UAC9B,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;QACjC,OAAO;UACH,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACrD;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZ;QACAC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACT,YAAW,GACZS,KAAK,CAACN,QAAQ,EAAEN,IAAI,EAAEY,KAAI,IAAK,2CAA2C;MAClF;IACJ;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}