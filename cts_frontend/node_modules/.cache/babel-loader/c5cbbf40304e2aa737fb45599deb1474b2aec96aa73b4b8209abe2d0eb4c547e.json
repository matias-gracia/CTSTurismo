{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"create-password-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Crear Nueva Contraseña\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.password = $event),\n    placeholder: \"Nueva contraseña\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    placeholder: \"Confirmar contraseña\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Guardar Contraseña\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createTextVNode(_toDisplayString($data.successMessage) + \" \", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Serás redirigido al inicio de sesión en \" + _toDisplayString($data.countdown) + \" segundos...\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleSubmit","type","$event","$data","password","placeholder","required","confirmPassword","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode","successMessage","_hoisted_4","_createTextVNode","countdown"],"sources":["C:\\Users\\matia\\OneDrive\\Escritorio\\Prueba tecnica CTS Turismo\\cts_frontend\\src\\components\\CreatePasswordForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-password-container\">\r\n    <div class=\"form-container\">\r\n      <h2>Crear Nueva Contraseña</h2>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <input\r\n          type=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          v-model=\"confirmPassword\"\r\n          placeholder=\"Confirmar contraseña\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Guardar Contraseña</button>\r\n      </form>\r\n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n      <div v-if=\"successMessage\" class=\"success\">\r\n        {{ successMessage }}\r\n        <p>Serás redirigido al inicio de sesión en {{ countdown }} segundos...</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { setPassword } from '../api/auth'; // Importa la función para enviar la contraseña al backend\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      password: '',\r\n      confirmPassword: '',\r\n      errorMessage: '',\r\n      successMessage: '',\r\n      countdown: 5, // Inicializa el contador en 5 segundos\r\n      uidb64: null, // Para almacenar uidb64 de la URL\r\n      token: null, // Para almacenar token de la URL\r\n    };\r\n  },\r\n  created() {\r\n    // Captura los parámetros desde la URL\r\n    this.uidb64 = this.$route.query.uidb64;\r\n    this.token = this.$route.query.token;\r\n\r\n    if (!this.uidb64 || !this.token) {\r\n      this.errorMessage = 'Parámetros inválidos en el enlace.';\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      if (this.password !== this.confirmPassword) {\r\n        this.errorMessage = 'Las contraseñas no coinciden.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await setPassword({\r\n          uidb64: this.uidb64,\r\n          token: this.token,\r\n          password: this.password,\r\n        });\r\n\r\n        this.successMessage = response.message;\r\n        this.errorMessage = '';\r\n\r\n        // Inicia el contador regresivo\r\n        const interval = setInterval(() => {\r\n          if (this.countdown > 0) {\r\n            this.countdown -= 1;\r\n          } else {\r\n            clearInterval(interval); // Detiene el contador\r\n            this.$router.push('/login'); // Redirige al login\r\n          }\r\n        }, 1000); // Disminuye el contador cada segundo\r\n      } catch (error) {\r\n        this.successMessage = '';\r\n        this.errorMessage =\r\n          error.response?.data?.error || 'Error al establecer la contraseña.';\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-password-container {\r\n  background: url('../assets/pareja.jpg') no-repeat center center fixed; /* Ruta de tu imagen */\r\n  background-size: cover; /* Asegura que la imagen cubra toda la pantalla */\r\n  height: 100vh; /* Altura completa de la pantalla */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form-container {\r\n  background-color: rgba(255, 255, 255, 0.8); /* Fondo blanco translúcido */\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n  text-align: center;\r\n}\r\n\r\ninput {\r\n  width: 90%;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n\r\n.success {\r\n  color: green;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;EAC/BA,KAAK,EAAC;AAAgB;;EAF/BC,GAAA;EAmB+BD,KAAK,EAAC;;;EAnBrCC,GAAA;EAoBiCD,KAAK,EAAC;;;uBAnBrCE,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,mBAAA,CAsBM,OAtBNC,UAsBM,G,0BArBJD,mBAAA,CAA+B,YAA3B,wBAAsB,sBAC1BA,mBAAA,CAcO;IAdAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sBACjCL,mBAAA,CAKE;IAJAQ,IAAI,EAAC,UAAU;IANzB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAOmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,WAAW,EAAC,kBAAkB;IAC9BC,QAAQ,EAAR;iDAFSH,KAAA,CAAAC,QAAQ,E,mBAInBX,mBAAA,CAKE;IAJAQ,IAAI,EAAC,UAAU;IAZzB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAamBC,KAAA,CAAAI,eAAe,GAAAL,MAAA;IACxBG,WAAW,EAAC,sBAAsB;IAClCC,QAAQ,EAAR;iDAFSH,KAAA,CAAAI,eAAe,E,6BAI1Bd,mBAAA,CAAiD;IAAzCQ,IAAI,EAAC;EAAQ,GAAC,oBAAkB,qB,4BAE/BE,KAAA,CAAAK,YAAY,I,cAAvBjB,mBAAA,CAA+D,OAA/DkB,UAA+D,EAAAC,gBAAA,CAArBP,KAAA,CAAAK,YAAY,oBAnB5DG,mBAAA,gBAoBiBR,KAAA,CAAAS,cAAc,I,cAAzBrB,mBAAA,CAGM,OAHNsB,UAGM,GAvBZC,gBAAA,CAAAJ,gBAAA,CAqBWP,KAAA,CAAAS,cAAc,IAAG,GACpB,iBAAAnB,mBAAA,CAA0E,WAAvE,0CAAwC,GAAAiB,gBAAA,CAAGP,KAAA,CAAAY,SAAS,IAAG,cAAY,gB,KAtB9EJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}